{"version":3,"file":"static/js/678.1cc8d034.chunk.js","mappings":"+NAGaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,8KAcTE,EAAmBF,EAAAA,EAAAA,GAAH,wC,8HCfhBG,EAAUH,EAAAA,EAAAA,IAAH,uMAcPI,EAAQJ,EAAAA,EAAAA,MAAa,CAChCK,SAAU,GACVC,aAAc,EACdC,QAAS,OACTC,QAAS,EACTC,aAAc,GACdC,YAAa,YACbC,YAAa,QACbC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,OAAQ,GACRC,UAAW,e,SCvBN,SAASC,IAAc,IAAD,EAC3B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAO/C,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,KAAK,OACLC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAVSF,EAUaE,EAAEC,OAAOH,WAR9CJ,EAD6B,KAAVI,EAAe,CAAEI,MAAOJ,GAAU,CAAC,GAD9B,IAAAA,CAUT,EACXK,KAAK,WAEP,SAAC,MAAD,MAGL,C,+BClBM,SAASC,IACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAuBjB,EAAAA,EAAAA,MACjBU,GADN,eAC2BN,IAAI,SACzBc,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACM,OAAVV,GAKJW,EAAAA,EAAAA,IAAmBX,GAAOY,MAAK,SAAAC,GACT,IAAhBA,EAAKC,QAKTT,EAAUQ,GACVN,EAAU,aALRA,EAAU,WAMb,IAZCA,EAAU,OAab,GAAE,CAACP,IAEW,SAAXM,GAEA,iCACE,SAACjB,EAAD,KACA,oDAKS,aAAXiB,GAEA,iCACE,SAACjB,EAAD,KACA,uGAOS,aAAXiB,GAEA,iCACE,SAACjB,EAAD,KACA,wBACGe,EAAOW,KAAI,SAAAC,GAAK,OACf,SAAC,IAAD,WACE,SAAC,IAAD,CAAWC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMZ,GAArD,SACGQ,EAAMK,SAFYL,EAAME,GADd,cALzB,CAgBD,CC7DD,MAJA,WACE,OAAO,SAAChB,EAAD,GACR,C","sources":["components/TrandingToday/TrandingToday.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n\n  &.active {\n    color: orangered;\n  }\n`;\n\nexport const TrandingListItem = styled.li`\n  padding: 4px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: fit-content;\n\n  svg {\n    color: black;\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    top: 5px;\n    right: 5px;\n  }\n`;\n\nexport const Input = styled.input({\n  fontSize: 16,\n  borderRadius: 4,\n  outline: 'none',\n  padding: 4,\n  paddingRight: 30,\n  borderColor: 'orangered',\n  borderStyle: 'solid',\n  position: 'relative',\n  bottom: 0,\n  left: 0,\n  height: 30,\n  boxSizing: 'border-box',\n});\n","import { useSearchParams } from 'react-router-dom';\nimport { BiSearch } from 'react-icons/bi';\nimport { Input } from './SearchForm.styled';\nimport { Wrapper } from './SearchForm.styled';\n\nexport function SearchForm() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQueryString = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Wrapper>\n      <Input\n        type=\"text\"\n        value={movieName}\n        onChange={e => updateQueryString(e.target.value)}\n        name=\"query\"\n      />\n      <BiSearch />\n    </Wrapper>\n  );\n}\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesByQuery } from 'service/moviesAPI';\nimport { MovieLink } from 'components/TrandingToday/TrandingToday.styled';\nimport { TrandingListItem } from 'components/TrandingToday/TrandingToday.styled';\n\nexport function MoviesSearch() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null) {\n      setStatus('idle');\n      return;\n    }\n\n    fetchMoviesByQuery(query).then(data => {\n      if (data.length === 0) {\n        setStatus('rejected');\n        return;\n      }\n\n      setMovies(data);\n      setStatus('resolved');\n    });\n  }, [query]);\n\n  if (status === 'idle') {\n    return (\n      <>\n        <SearchForm />\n        <p>Enter a query please.</p>\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <>\n        <SearchForm />\n        <p>\n          Sorry, there are no movies matching your search query. Please try\n          again.\n        </p>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <SearchForm />\n        <ul>\n          {movies.map(movie => (\n            <TrandingListItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </MovieLink>\n            </TrandingListItem>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import { MoviesSearch } from 'components/MoviesSearch/MoviesSearch';\n\nfunction Movies() {\n  return <MoviesSearch />;\n}\n\nexport default Movies;\n"],"names":["MovieLink","styled","NavLink","TrandingListItem","Wrapper","Input","fontSize","borderRadius","outline","padding","paddingRight","borderColor","borderStyle","position","bottom","left","height","boxSizing","SearchForm","useSearchParams","searchParams","setSearchParams","movieName","get","type","value","onChange","e","target","query","name","MoviesSearch","useState","movies","setMovies","status","setStatus","location","useLocation","useEffect","fetchMoviesByQuery","then","data","length","map","movie","to","id","state","from","title"],"sourceRoot":""}