{"version":3,"file":"static/js/727.e151283d.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,EAAAA,GAAH,0JASTC,EAAYD,EAAAA,EAAAA,GAAH,4FAMTE,EAAaF,EAAAA,EAAAA,IAAH,0F,SCmBvB,MA5BA,WACE,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,IAAU,MAAtBD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAN,GAAM,OAAIC,EAAUD,EAAOO,MAAM,EAAG,GAA9B,GACvC,GAAE,CAACL,IAEkB,IAAlBF,EAAOQ,QACF,qDAIP,SAACX,EAAD,UACGG,EAAOS,KAAI,SAAAC,GAAK,OACf,UAACf,EAAD,YACE,SAACG,EAAD,CACEa,IAAG,yCAAoCD,EAAME,cAC7CC,IAAI,MAEN,uBAAIH,EAAMI,QACV,uCAAeJ,EAAMK,eANPL,EAAMM,GADP,KAYtB,C,+LChCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,2CAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,+BAAkCC,IADpD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCP,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,YAA0BE,IAD5C,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACkBR,EAAAA,EAAAA,IAAA,8BAAiCQ,EAAjC,YAA0CP,IAD5D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCW,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADpD,cACCE,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCX,GAAjC,uFACkBC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADpD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/MovieCredits/MovieCredits.styled.js","components/MovieCredits/MovieCredits.jsx","service/moviesAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorCard = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 220px;\n  text-align: center;\n`;\n\nexport const ActorList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  padding: 0;\n`;\n\nexport const ActorImage = styled.img`\n  margin-bottom: 12px;\n  display: block;\n  border-radius: 4px;\n`;\n","import { useEffect } from 'react';\nimport { fetchMovieCredits } from 'service/moviesAPI';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ActorCard } from './MovieCredits.styled';\nimport { ActorList } from './MovieCredits.styled';\nimport { ActorImage } from './MovieCredits.styled';\n\nfunction MovieCredits() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams(null);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(actors => setActors(actors.slice(0, 5)));\n  }, [movieId]);\n\n  if (actors.length === 0) {\n    return <p>There is no information.</p>;\n  }\n\n  return (\n    <ActorList>\n      {actors.map(actor => (\n        <ActorCard key={actor.id}>\n          <ActorImage\n            src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n            alt=\"\"\n          />\n          <b>{actor.name}</b>\n          <p>Character: {actor.character}</p>\n        </ActorCard>\n      ))}\n    </ActorList>\n  );\n}\n\nexport default MovieCredits;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst key = 'api_key=74b70279ba32fa3bffd48db3ec6e3fd8';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/week?${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}?${key}`);\n  return response.data;\n}\n\nexport async function fetchMoviesByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}&${key}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits?${key}`);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews?${key}`);\n  return response.data.results;\n}\n"],"names":["ActorCard","styled","ActorList","ActorImage","useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCredits","then","slice","length","map","actor","src","profile_path","alt","name","character","id","axios","key","fetchTrending","response","data","results","fetchMovieDetails","fetchMoviesByQuery","query","cast","fetchMovieReviews"],"sourceRoot":""}